generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  fid        Int      @unique // Farcaster ID
  username   String   @unique
  pfpUrl     String?
  tips       Tip[]
  bookmarks  String[] // Array of Novel IDs (as strings)
  novels     String[] // Array of Novel IDs (as strings, for authored novels)
  supporters Supporter[]
  createdAt  DateTime? @map("createdAt")
  updatedAt  DateTime? @map("updatedAt")
}

model Tip {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  novel     Novel?   @relation(fields: [novelId], references: [id])
  novelId   String?
  amount    Float
  date      DateTime @default(now())
}

model Supporter {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
  novel      Novel?   @relation(fields: [novelId], references: [id])
  novelId    String?
  totalTipped Float
}

model Novel {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String    @unique
  novelUrl      String? 
  author        String?
  rank          String?
  totalChapters String?
  views         String?
  bookmarks     String?
  status        String?
  genres        String[]
  summary       String?
  chaptersUrl   String?
  imageUrl      String?
  chapters      Chapter[] @relation("NovelChapters")
  lastScraped   DateTime? @default(now())
  createdAt     DateTime? @map("createdAt")
  updatedAt     DateTime? @map("updatedAt")
  tips          Tip[]
  supporters    Supporter[]

  @@map("novels")
}

model Chapter {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  novel         String?  @db.ObjectId // Reference to Novel
  novelRel      Novel?   @relation("NovelChapters", fields: [novel], references: [id])
  chapterNumber Int
  url           String   @unique
  title         String
  content       String
  createdAt     DateTime? @map("createdAt")
  updatedAt     DateTime? @map("updatedAt")

  @@index([novel, chapterNumber], name: "novel_chapterNumber_idx")
  @@map("chapters")
}
